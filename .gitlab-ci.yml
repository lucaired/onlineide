image: maven:3.6.3-jdk-11

include:
  - local: "/ui/.gitlab-ci.yml"
  - local: "/compiler/.gitlab-ci.yml"
  - local: "/dark-mode/.gitlab-ci.yml"
  - local: "/project/.gitlab-ci.yml"
  - local: "/api-gateway/.gitlab-ci.yml"
  - local: "/service-registry/.gitlab-ci.yml"

cache:
  paths:
    - .m2/repository

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode"

stages:
  - package-dependencies
  - build
  - test
  - package
  - production

.template-build:
  stage: build
  script:
    - cd $MICROSERVICE_DIR
    - mvn $MAVEN_CLI_OPTS clean compile

.template-package:
  stage: package
  variables:
    # This is not an optimal solution because the command for setting the repository path is duplicated.
    # It would be cleaner to extend the globally set environment variable MAVEN_OPTS with the part needed here (to skip the tests).
    # However, there seems to be no other reasonable solution for this at the moment.
    # In https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1809 this problem is discussed and also a workaround is suggested, which unfortunately did not work as expected.
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -DskipTests=true"
  script:
    - cd $MICROSERVICE_DIR
    - mvn $MAVEN_CLI_OPTS clean compile
    - mvn compile jib:build -Djib.to.auth.username=$CI_DEPLOY_USERNAME -Djib.to.auth.password=$CI_DEPLOY_TOKEN -Djib.from.auth.username=$CI_DEPLOY_USERNAME -Djib.from.auth.password=$CI_DEPLOY_TOKEN

deploy-to-gcp:
  stage: production
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - scp -r docker-compose.yml $SSH_HOST:~/
    - ssh $SSH_HOST "sudo docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_TOKEN gitlab.lrz.de:5005"
    - ssh $SSH_HOST "sudo docker-compose pull && sudo OAUTH_CLIENT_ID=$OAUTH_CLIENT_ID OAUTH_CLIENT_SECRET=$OAUTH_CLIENT_SECRET docker-compose up --force-recreate -d"
  variables:
    SSH_HOST: marc@35.242.243.82
  only:
  - development
